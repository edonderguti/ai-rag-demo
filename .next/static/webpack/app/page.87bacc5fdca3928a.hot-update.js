"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useCustomChat.jsx":
/*!*************************************!*\
  !*** ./src/hooks/useCustomChat.jsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useCustomChat: () => (/* binding */ useCustomChat)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/./node_modules/nanoid/index.browser.js\");\nvar _s = $RefreshSig$();\n\n// For generating unique IDs (optionalâ€”could use Date.now() or Math.random)\n\n/**\r\n * A custom hook that replicates the core functionality of `useChat` but\r\n * points to your own backend endpoint for responses.\r\n *\r\n * @param {Object} options\r\n * @param {string} [options.api=\"/api/rag\"]  - The API endpoint to call.\r\n * @param {string} [options.id]             - A custom chat ID (optional).\r\n * @param {Object[]} [options.initialMessages=[]] - Initial array of message objects.\r\n * @param {Function} [options.onError]      - Callback when the request errors.\r\n * @param {Function} [options.onFinish]     - Callback when the request finishes.\r\n * @param {Function} [options.onResponse]   - Callback for the raw fetch Response.\r\n *\r\n * @returns {Object} - { id, messages, setMessages, isLoading, stop, input, setInput, append, handleSubmit }\r\n */ /**\r\n * A custom hook that replicates basic \"chat\" logic,\r\n * but calls your Next.js /api/rag route\r\n * which, in turn, calls API Gateway.\r\n */ function useCustomChat() {\n    let { api = \"/api/route\", id: customId, initialMessages = [], onError, onFinish, onResponse } = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    _s();\n    // Unique chat ID (optional)\n    const [id] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(customId || (0,nanoid__WEBPACK_IMPORTED_MODULE_1__.nanoid)());\n    // All chat messages so far\n    const [messages, setMessages] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(initialMessages);\n    // User input in the text field\n    const [input, setInput] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    // Is a request currently in-flight\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // Abort controller to cancel requests if needed\n    const controllerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    function stop() {\n        if (controllerRef.current) {\n            controllerRef.current.abort();\n            controllerRef.current = null;\n        }\n    }\n    /**\r\n   * Adds a new message to the conversation and calls the /api/rag endpoint\r\n   * if it's a user message.\r\n   */ async function append(param) {\n        let { role, content } = param;\n        try {\n            setIsLoading(true);\n            // 1. Add the new message to our existing messages\n            const newMessage = {\n                id: (0,nanoid__WEBPACK_IMPORTED_MODULE_1__.nanoid)(),\n                role,\n                content\n            };\n            // We'll capture the updated messages in a variable\n            // so we can pass them to the server.\n            // Update messages state\n            const updatedMessages = [\n                ...messages,\n                newMessage\n            ];\n            setMessages(updatedMessages);\n            console.log(\"Updated Message -->\", updatedMessages);\n            // 2. If the user is the sender, call the backend\n            if (role === \"user\") {\n                controllerRef.current = new AbortController();\n                const res = await fetch(\"/api/route\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        // This is where we send the ENTIRE conversation\n                        // so your route can extract the last user message.\n                        messages: updatedMessages\n                    }),\n                    signal: controllerRef.current.signal\n                });\n                console.log(\"RES\", res);\n                if (onResponse) {\n                    onResponse(res);\n                }\n                if (!res.ok) {\n                    throw new Error(\"Request failed with status \".concat(res.status));\n                }\n                // 3. Suppose the route returns { question, answer }\n                const data = await res.json();\n                console.log(\"JSON data:\", data);\n                // 4. Add the assistant's response to messages\n                const assistantMessage = {\n                    id: (0,nanoid__WEBPACK_IMPORTED_MODULE_1__.nanoid)(),\n                    role: \"assistant\",\n                    // Our route returns \"data\", which presumably might have\n                    // a property like `data.answer` from API Gateway\n                    content: data.answer || \"\"\n                };\n                setMessages((prev)=>[\n                        ...prev,\n                        assistantMessage\n                    ]);\n                if (onFinish) {\n                    onFinish(assistantMessage);\n                }\n            }\n            setIsLoading(false);\n        } catch (error) {\n            setIsLoading(false);\n            if (onError) {\n                onError(error);\n            } else {\n                console.error(\"useCustomChat error:\", error);\n            }\n        }\n    }\n    /**\r\n   * Typical form submit handler\r\n   */ function handleSubmit(e) {\n        if (e && e.preventDefault) {\n            e.preventDefault();\n        }\n        if (!input.trim()) {\n            return;\n        }\n        append({\n            role: \"user\",\n            content: input\n        });\n        setInput(\"\");\n    }\n    return {\n        id,\n        messages,\n        setMessages,\n        isLoading,\n        stop,\n        input,\n        setInput,\n        append,\n        handleSubmit\n    };\n}\n_s(useCustomChat, \"Khty3WWbtuwSfV65EGyTUQNdLng=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useCustomChat.jsx\n"));

/***/ })

});